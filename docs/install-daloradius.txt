daloRADIUS Installation
=======================

pfSense requires an external freeRADIUS server to authenticate users/connected devices and account for their traffic volumes. While freeRADIUS could be set up from scratch, a pre-prepared virtual machine called daloRADIUS is used. This VM contains an almost-ready-to-go installation. Such a VM also makes backups of the whole system easier.


Configuration of physical host for daloRADIUS virtual machine
-------------------------------------------------------------

The system to host the daloRADIUS virtual machine could be almost any system, but a common deployment is to run a VirtualBox on top of a Lubuntu installation. Only a few additional changes are required.

Install and activate SSH server

Set IP address as needed, typically same subnet as pfSense.

add autologin http://ubuntuforums.org/showthread.php?t=1472113

autostart of vbox virtual box:
create file ~/Desktop/autostart_daloradius.sh with content (taken from https://forums.virtualbox.org/viewtopic.php?f=11&t=51529)
#! /bin/sh
sleep 30
VBoxManage startvm "daloRADIUS VM"

make script executable with chmod +x ~/Desktop/autostart_daloradius.sh (http://askubuntu.com/questions/459277/how-do-i-make-a-program-auto-start-everytime-i-log-in-in-ubuntu-14-04, http://wiki.ubuntuusers.de/LXDE_Einstellungen#Autostart-und-Sitzungseinstellungen-Default-application-for-LXSession-und-LXSession-edit,
http://askubuntu.com/questions/517633/how-do-i-run-a-script-on-unity-login-logout)

sudo chmod a+rw /opt (at least for Ubuntu 14.04 as saving machine states otherwise doesnt work)

Import the daloRADIUS VM into Virtual Box. Use default settings.

Linux need to see the host hardware clock as UTC. Enable this VM setting with the System - Motherboard - Extended features option.

Start the Virtual Machine.


System configuration
--------------------

After starting the VM and (re-) configure the network interface (typically a static IP in the 'server subnet') the Web UI is accessible through the network.

SSH into the system (root/daloradius as default username/password) and run 'dpkg-reconfigure tzdata' from command line as root and set correct timezone

Set timezone for PHP to date.timezone = 'Africa/Blantyre' (or 'Europe/Berlin') in /etc/php5/apache2/php.ini

Deactivate /etc/cron.d/cron-apt in cron (to avoid system load while checking for updates)

Copy and extract marsPortal.tgz to /home/marsPortal

cp /home/marsPortal/config.txt.sample /home/marsPortal/config.txt
Edit and adjust value in /home/marsPortal/config.txt

Create symbloc link /var/www/mars pointing to setup-daloradius/www/mars:
ln -s /home/marsPortal/setup-daloradius/www/mars /var/www/mars


Configuration of freeRADIUS
---------------------------

Modify /etc/freeradius/sites-enabled/default as follows:

        # checking for concurrently active users of same user group / profile
        # copy/paste into authorize section of daloradius /etc/freeradius/sites-enabled/default
        # below the counterChilliSpot entries
        if ("%{check:mars-Max-Concurrent-Devices}") {
                if("%{check:mars-Max-Concurrent-Devices}" <= "%{sql:select count(*) from radacct where acctstoptime is null and username in (select username from radusergroup where groupname in (select groupname from radusergroup where username='%{User-Name}'));}") {
                        update reply {
                                Reply-Message := "Too many users - please try again later (%{sql:select count(*) from radacct where acctstoptime is null and username in (select username from radusergroup where groupname in (select groupname from radusergroup where username='%{User-Name}'))} of %{check:mars-Max-Concurrent-Devices})"
                        }
                        reject
                }
        }

        # accounting during business hours, preventing re-connect
        # copy/paste into daloradius /etc/freeradius/sites-enabled/default
        # below the counterChilliSpot entries
        update control {
                # based on content in table daily_accounting, which is updated by cronjobs
                My-Local-Output = "%{sql:SELECT IFNULL((SELECT ROUND((outputoctets_work_end - outputoctets_work_beg) / 1000000) FROM daily_accounting WHERE username = '%{SQL-User-Name}' AND day = date_format(now(), '%Y-%m-%d')), '0')}"
                My-Local-Input = "%{sql:SELECT IFNULL((SELECT ROUND((inputoctets_work_end - inputoctets_work_beg) / 1000000) FROM daily_accounting WHERE username = '%{SQL-User-Name}' AND day = date_format(now(), '%Y-%m-%d')), '0')}"
        }

        # check for daily volume restrictions during business hours
        if ("%{check:mars-Output-Megabytes-Daily-Work-Hours}" > 0 && "%{check:mars-Input-Megabytes-Daily-Work-Hours}" > 0) {
                if (("%{control:My-Local-Output}" > "%{check:mars-Output-Megabytes-Daily-Work-Hours}") || ("%{control:My-Local-Input}" > "%{check:mars-Input-Megabytes-Daily-Work-Hours}")) {
                        update reply {
                                Reply-Message := "Data bundle during business hours exceeded. Used: %{control:My-Local-Output} / %{control:My-Local-Input} MB - Granted: %{check:mars-Output-Megabytes-Daily-Work-Hours} / %{check:mars-Input-Megabytes-Daily-Work-Hours} MB (download/upload)"
                        }
                        reject
                }
        }

        # accounting for full day, preventing re-connect
        # copy/paste into daloradius /etc/freeradius/sites-enabled/default
        # below the counterChilliSpot entries
        update control {
                # based on content in table daily_accounting, which is updated by cronjobs
                My-Local-Output = "%{sql:SELECT IFNULL((SELECT ROUND((outputoctets_day_end - outputoctets_day_beg) / 1000000) FROM daily_accounting WHERE username = '%{SQL-User-Name}' AND day = date_format(now(), '%Y-%m-%d')), '0')}"
                My-Local-Input = "%{sql:SELECT IFNULL((SELECT ROUND((inputoctets_day_end - inputoctets_day_beg) / 1000000) FROM daily_accounting WHERE username = '%{SQL-User-Name}' AND day = date_format(now(), '%Y-%m-%d')), '0')}"
        }

        # check for daily volume restrictions
        if ("%{check:mars-Output-Megabytes-Daily-Total}" > 0 && "%{check:mars-Input-Megabytes-Daily-Total}" > 0) {
                if (("%{control:My-Local-Output}" > "%{check:mars-Output-Megabytes-Daily-Total}") || ("%{control:My-Local-Input}" > "%{check:mars-Input-Megabytes-Daily-Total}")) {
                        update reply {
                                Reply-Message := "Daily data bundle exceeded. Used: %{control:My-Local-Output} / %{control:My-Local-Input} MB - Granted: %{check:mars-Output-Megabytes-Daily-Total} / %{check:mars-Input-Megabytes-Daily-Total} MB (download/upload)"
                        }
                        reject
                }
        }

        # ---------------

		# add at end of preacct section
        sql.authorize

	    # ---------------
	
        # accounting during working hours, kicking out active session if limit is reached
        # needs to go in accounting section, e.g. before exec block
        update control {
                # based on content in table daily_accounting, which is updated by cronjobs
                My-Local-Output = "%{sql:SELECT IFNULL((SELECT ROUND((outputoctets_work_end - outputoctets_work_beg) / 1000000) FROM daily_accounting WHERE username = '%{SQL-User-Name}' AND day = date_format(now(), '%Y-%m-%d')), '0')}"
                My-Local-Input = "%{sql:SELECT IFNULL((SELECT ROUND((inputoctets_work_end - inputoctets_work_beg) / 1000000) FROM daily_accounting WHERE username = '%{SQL-User-Name}' AND day = date_format(now(), '%Y-%m-%d')), '0')}"
        }

        # check for daily volume restrictions during working hours
        if ("%{check:mars-Output-Megabytes-Daily-Work-Hours}" && "%{check:mars-Input-Megabytes-Daily-Work-Hours}") {
                if (("%{control:My-Local-Output}" > "%{check:mars-Output-Megabytes-Daily-Work-Hours}") || ("%{control:My-Local-Input}" > "%{check:mars-Input-Megabytes-Daily-Work-Hours}")) {
                        captiveportal-disconnect-user
                }
        }

        # daily total accounting, kicking out active session if limit is reached
        # needs to go in accounting section, e.g. before exec block
        update control {
                # based on content in table daily_accounting, which is updated by cronjobs
                My-Local-Output = "%{sql:SELECT IFNULL((SELECT ROUND((outputoctets_day_end - outputoctets_day_beg) / 1000000) FROM daily_accounting WHERE username = '%{SQL-User-Name}' AND day = date_format(now(), '%Y-%m-%d')), '0')}"
                My-Local-Input = "%{sql:SELECT IFNULL((SELECT ROUND((inputoctets_day_end - inputoctets_day_beg) / 1000000) FROM daily_accounting WHERE username = '%{SQL-User-Name}' AND day = date_format(now(), '%Y-%m-%d')), '0')}"
        }

        # check for daily volume restrictions during working hours
        if ("%{check:mars-Output-Megabytes-Daily-Total}" && "%{check:mars-Input-Megabytes-Daily-Total}") {
                if (("%{control:My-Local-Output}" > "%{check:mars-Output-Megabytes-Daily-Total}") || ("%{control:My-Local-Input}" > "%{check:mars-Input-Megabytes-Daily-Total}")) {
                        captiveportal-disconnect-user
                }
        }

add to /etc/freeradius/modules/exec
# enforce user disconnect from pfSense 
exec captiveportal-disconnect-user {
	wait = no
	program = "/bin/bash /home/marsPortal/misc/captiveportal-disconnect-user.sh %{User-Name}"
	input_pairs = request
	shell_escape = yes
	output = none
}

Add to /etc/freeradius/dictionary
ATTRIBUTE       mars-Input-Megabytes-Daily-Work-Hours   3003    integer
ATTRIBUTE       mars-Output-Megabytes-Daily-Work-Hours  3004    integer
ATTRIBUTE       My-Local-Input                          3005    integer
ATTRIBUTE       My-Local-Output                         3006    integer
ATTRIBUTE       mars-Max-Concurrent-Devices             3007    integer
ATTRIBUTE       mars-Input-Megabytes-Daily-Total        3008    integer
ATTRIBUTE       mars-Output-Megabytes-Daily-Total       3009    integer

Run command and make sure the line 'Starting FreeRADIUS' ends with an OK:  /etc/init.d/freeradius force-reload


Configuration of daloRADIUS
---------------------------

Log into daloRADIUS web interface with http://<ip of daloradius> (default access with admin/admin and administrator/radius)

Create a NAS with the IP of pfSense (requires a reboot of freeRADIUS afterwards),

Add additional attributes via Management - Attributes - New Vendor Attribute
marsPortal
mars-Max-Concurrent-Devices, mars-Input-Megabytes-Daily-Total, mars-Output-Megabytes-Daily-Total, mars-Input-Megabytes-Daily-Work-Hours and mars-Output-Megabytes-Daily-Work-Hours
integer
:=
check

Remove all unneeded pre-default user groups (called profiles) except daloRADIUS-Disabled-Users.

Create new user groups (called profiles) as required, e.g. Users, Guests, Leadership. 

For each of these groups the following attributes can be added to determine the characteristics of the group Possible RADIUS attributes for each group: 
- WISPr-Bandwidth-Max-Down, WISPr-Bandwidth-Max-Up
- Session-Timeout
- mars-Output-Megabytes-Daily-Work-Hours and mars-Input-Megabytes-Daily-Work-Hours
- mars-Output-Megabytes-Daily-Total and mars-Input-Megabytes-Daily-Total
- mars-Max-Concurrent-Devices
- Accept-Method: reject

Optional: For every user group, create a matching XYZ-open-for-today group (these names are part of some automated scripts, so do not change this postfix). 


Manual configs
--------------

Execute the following block in a SSH shell:
mysql -u radius -pradius radius <<EOF
DROP TABLE IF EXISTS daily_accounting;
CREATE TABLE daily_accounting (
  id int(32) NOT NULL AUTO_INCREMENT,
  username varchar(64) COLLATE utf8_unicode_ci NOT NULL,
  day date NOT NULL,
  day_beg datetime,
  inputoctets_day_beg bigint(20) DEFAULT 0,
  outputoctets_day_beg bigint(20) DEFAULT 0,
  work_beg datetime,
  inputoctets_work_beg bigint(20) DEFAULT 0,
  outputoctets_work_beg bigint(20) DEFAULT 0,
  work_end datetime,
  inputoctets_work_end bigint(20) DEFAULT 0,
  outputoctets_work_end bigint(20) DEFAULT 0,
  day_end datetime,
  inputoctets_day_end bigint(20) DEFAULT 0,
  outputoctets_day_end bigint(20) DEFAULT 0,
  PRIMARY KEY (id)
) ENGINE=MyISAM DEFAULT CHARSET=latin1;
ALTER TABLE daily_accounting ADD UNIQUE INDEX (username, day);
EOF

add these cronjobs to the crontab 
59 23 * * * /home/marsPortal/daloradius-accounting/reset-groups-open-for-today.sh
5 0 * * * /home/marsPortal/daloradius-accounting/accounting-snapshot-beg-of-day.sh
0 7 * * 1-5 /home/marsPortal/daloradius-accounting/accounting-snapshot-beg-of-work.sh
9,19,29,39,49,59 7-17 * * 1-5 /home/marsPortal/daloradius-accounting/accounting-snapshot-end-of-work.sh
5,15,25,35,45,55 1-23 * * * /home/marsPortal/daloradius-accounting/accounting-snapshot-end-of-day.sh

Reboot daloRADIUS VM

