
        # checking for concurrently active users of same user group / profile
        if ("%{check:mars-Max-Concurrent-Devices}") {
                if("%{check:mars-Max-Concurrent-Devices}" <= "%{sql:select count(*) from radacct where acctstoptime is null and username in (select username from radusergroup where groupname in (select groupname from radusergroup where username='%{User-Name}'));}") {
                        update reply {
                                Reply-Message := "Too many users - please try again later (%{sql:select count(*) from radacct where acctstoptime is null and username in (select username from radusergroup where groupname in (select groupname from radusergroup where username='%{User-Name}'))} of %{check:mars-Max-Concurrent-Devices})"
                        }
                        reject
                }
        }

        # accounting during business hours, preventing re-connect
        update control {
                # based on content in table daily_accounting, which is updated by cronjobs
                My-Local-Output = "%{sql:SELECT IFNULL((SELECT ROUND((outputoctets_work_end - outputoctets_work_beg) / 1000000) FROM daily_accounting WHERE username = '%{SQL-User-Name}' AND day = date_format(now(), '%Y-%m-%d')), '0')}"
                My-Local-Input = "%{sql:SELECT IFNULL((SELECT ROUND((inputoctets_work_end - inputoctets_work_beg) / 1000000) FROM daily_accounting WHERE username = '%{SQL-User-Name}' AND day = date_format(now(), '%Y-%m-%d')), '0')}"
        }
        if ("%{check:mars-Output-Megabytes-Daily-Work-Hours}" > 0 && "%{check:mars-Input-Megabytes-Daily-Work-Hours}" > 0) {
                if (("%{control:My-Local-Output}" > "%{check:mars-Output-Megabytes-Daily-Work-Hours}") || ("%{control:My-Local-Input}" > "%{check:mars-Input-Megabytes-Daily-Work-Hours}")) {
                        update reply {
                                Reply-Message := "Data bundle during business hours exceeded. Used: %{control:My-Local-Output} / %{control:My-Local-Input} MB - Granted: %{check:mars-Output-Megabytes-Daily-Work-Hours} / %{check:mars-Input-Megabytes-Daily-Work-Hours} MB (download/upload)"
                        }
                        reject
                }
        }

        # accounting for full day, preventing re-connect
        update control {
                # based on content in table daily_accounting, which is updated by cronjobs
                My-Local-Output = "%{sql:SELECT IFNULL((SELECT ROUND((outputoctets_day_end - outputoctets_day_beg) / 1000000) FROM daily_accounting WHERE username = '%{SQL-User-Name}' AND day = date_format(now(), '%Y-%m-%d')), '0')}"
                My-Local-Input = "%{sql:SELECT IFNULL((SELECT ROUND((inputoctets_day_end - inputoctets_day_beg) / 1000000) FROM daily_accounting WHERE username = '%{SQL-User-Name}' AND day = date_format(now(), '%Y-%m-%d')), '0')}"
        }
        if ("%{check:mars-Output-Megabytes-Daily-Total}" > 0 && "%{check:mars-Input-Megabytes-Daily-Total}" > 0) {
                if (("%{control:My-Local-Output}" > "%{check:mars-Output-Megabytes-Daily-Total}") || ("%{control:My-Local-Input}" > "%{check:mars-Input-Megabytes-Daily-Total}")) {
                        update reply {
                                Reply-Message := "Daily data bundle exceeded. Used: %{control:My-Local-Output} / %{control:My-Local-Input} MB - Granted: %{check:mars-Output-Megabytes-Daily-Total} / %{check:mars-Input-Megabytes-Daily-Total} MB (download/upload)"
                        }
                        reject
                }
        }

